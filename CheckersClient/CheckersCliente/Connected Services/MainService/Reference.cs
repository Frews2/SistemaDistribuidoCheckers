//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheckersCliente.MainService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jugador", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    [System.SerializableAttribute()]
    public partial class Jugador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApodoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseniaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoElectronicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCreadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdJugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdLenguajeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinConfirmacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreguntaRecuperacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RespuestaConfirmacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apodo {
            get {
                return this.ApodoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApodoField, value) != true)) {
                    this.ApodoField = value;
                    this.RaisePropertyChanged("Apodo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contrasenia {
            get {
                return this.ContraseniaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseniaField, value) != true)) {
                    this.ContraseniaField = value;
                    this.RaisePropertyChanged("Contrasenia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorreoElectronico {
            get {
                return this.CorreoElectronicoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoElectronicoField, value) != true)) {
                    this.CorreoElectronicoField = value;
                    this.RaisePropertyChanged("CorreoElectronico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCreador {
            get {
                return this.IdCreadorField;
            }
            set {
                if ((this.IdCreadorField.Equals(value) != true)) {
                    this.IdCreadorField = value;
                    this.RaisePropertyChanged("IdCreador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdJugador {
            get {
                return this.IdJugadorField;
            }
            set {
                if ((this.IdJugadorField.Equals(value) != true)) {
                    this.IdJugadorField = value;
                    this.RaisePropertyChanged("IdJugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdLenguaje {
            get {
                return this.IdLenguajeField;
            }
            set {
                if ((this.IdLenguajeField.Equals(value) != true)) {
                    this.IdLenguajeField = value;
                    this.RaisePropertyChanged("IdLenguaje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinConfirmacion {
            get {
                return this.PinConfirmacionField;
            }
            set {
                if ((object.ReferenceEquals(this.PinConfirmacionField, value) != true)) {
                    this.PinConfirmacionField = value;
                    this.RaisePropertyChanged("PinConfirmacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreguntaRecuperacion {
            get {
                return this.PreguntaRecuperacionField;
            }
            set {
                if ((object.ReferenceEquals(this.PreguntaRecuperacionField, value) != true)) {
                    this.PreguntaRecuperacionField = value;
                    this.RaisePropertyChanged("PreguntaRecuperacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RespuestaConfirmacion {
            get {
                return this.RespuestaConfirmacionField;
            }
            set {
                if ((object.ReferenceEquals(this.RespuestaConfirmacionField, value) != true)) {
                    this.RespuestaConfirmacionField = value;
                    this.RaisePropertyChanged("RespuestaConfirmacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResult", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    public enum LoginResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PasswordIncorrecto = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoExisteJugador = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExisteJugadorVerificado = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExisteJugadorNoVerificado = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EsAdmin = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveResult", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    public enum SaveResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JugadorGuardado = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NicknameExistente = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorreoExistente = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorGuardado = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerificationResult", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    public enum VerificationResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PinIncorrecto = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoExisteJugador = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerificacionExistosa = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailResult", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    public enum MailResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MailSend = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendError = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownPlayer = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PinResult", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    public enum PinResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerifiedPin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongAnswer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownPin = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordChangeResult", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    public enum PasswordChangeResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedPassword = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorChanging = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataObtainedResult", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    public enum DataObtainedResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataObtained = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorObtainingData = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RankingResult", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    public enum RankingResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_RANKING = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RANKING_EXISTS = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ranking", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    [System.SerializableAttribute()]
    public partial class Ranking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckersCliente.MainService.Jugador DuenioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaRegistracionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdRankingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroPerdidasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroVictoriasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartidasJugadasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheckersCliente.MainService.Jugador Duenio {
            get {
                return this.DuenioField;
            }
            set {
                if ((object.ReferenceEquals(this.DuenioField, value) != true)) {
                    this.DuenioField = value;
                    this.RaisePropertyChanged("Duenio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaRegistracion {
            get {
                return this.FechaRegistracionField;
            }
            set {
                if ((this.FechaRegistracionField.Equals(value) != true)) {
                    this.FechaRegistracionField = value;
                    this.RaisePropertyChanged("FechaRegistracion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRanking {
            get {
                return this.IdRankingField;
            }
            set {
                if ((this.IdRankingField.Equals(value) != true)) {
                    this.IdRankingField = value;
                    this.RaisePropertyChanged("IdRanking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroPerdidas {
            get {
                return this.NumeroPerdidasField;
            }
            set {
                if ((this.NumeroPerdidasField.Equals(value) != true)) {
                    this.NumeroPerdidasField = value;
                    this.RaisePropertyChanged("NumeroPerdidas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroVictorias {
            get {
                return this.NumeroVictoriasField;
            }
            set {
                if ((this.NumeroVictoriasField.Equals(value) != true)) {
                    this.NumeroVictoriasField = value;
                    this.RaisePropertyChanged("NumeroVictorias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartidasJugadas {
            get {
                return this.PartidasJugadasField;
            }
            set {
                if ((this.PartidasJugadasField.Equals(value) != true)) {
                    this.PartidasJugadasField = value;
                    this.RaisePropertyChanged("PartidasJugadas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckersGameMode", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    public enum CheckersGameMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassicCheckers = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuicidalCheckers = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanadianCheckers = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItalianCheckers = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoGame = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Checker", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    public enum Checker : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        freeSpace = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        player1Checker = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        player1King = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        player2Checker = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        player2King = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchmakingResult", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    public enum MatchmakingResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MATCH_FOUND = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MATCH_NOT_FOUND = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNABLE_TO_ENTER_MATCH = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Match", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.Jugador))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.RankingResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.Ranking[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.Ranking))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.LoginResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.SaveResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.VerificationResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.MailResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.PinResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.PasswordChangeResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.DataObtainedResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.CheckersGameMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.Checker[][]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.Checker[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.Checker))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckersCliente.MainService.MatchmakingResult))]
    public partial class Match : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int currentPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int matchActiveNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object playerOneCallbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckersCliente.MainService.Jugador playerOneDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object playerTwoCallbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckersCliente.MainService.Jugador playerTwoDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int currentPlayer {
            get {
                return this.currentPlayerField;
            }
            set {
                if ((this.currentPlayerField.Equals(value) != true)) {
                    this.currentPlayerField = value;
                    this.RaisePropertyChanged("currentPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int matchActiveNumber {
            get {
                return this.matchActiveNumberField;
            }
            set {
                if ((this.matchActiveNumberField.Equals(value) != true)) {
                    this.matchActiveNumberField = value;
                    this.RaisePropertyChanged("matchActiveNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object playerOneCallback {
            get {
                return this.playerOneCallbackField;
            }
            set {
                if ((object.ReferenceEquals(this.playerOneCallbackField, value) != true)) {
                    this.playerOneCallbackField = value;
                    this.RaisePropertyChanged("playerOneCallback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheckersCliente.MainService.Jugador playerOneData {
            get {
                return this.playerOneDataField;
            }
            set {
                if ((object.ReferenceEquals(this.playerOneDataField, value) != true)) {
                    this.playerOneDataField = value;
                    this.RaisePropertyChanged("playerOneData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object playerTwoCallback {
            get {
                return this.playerTwoCallbackField;
            }
            set {
                if ((object.ReferenceEquals(this.playerTwoCallbackField, value) != true)) {
                    this.playerTwoCallbackField = value;
                    this.RaisePropertyChanged("playerTwoCallback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheckersCliente.MainService.Jugador playerTwoData {
            get {
                return this.playerTwoDataField;
            }
            set {
                if ((object.ReferenceEquals(this.playerTwoDataField, value) != true)) {
                    this.playerTwoDataField = value;
                    this.RaisePropertyChanged("playerTwoData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MainService.IPlayerManager", CallbackContract=typeof(CheckersCliente.MainService.IPlayerManagerCallback))]
    public interface IPlayerManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/Login")]
        void Login(CheckersCliente.MainService.Jugador player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/Login")]
        System.Threading.Tasks.Task LoginAsync(CheckersCliente.MainService.Jugador player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/SavePlayer")]
        void SavePlayer(CheckersCliente.MainService.Jugador player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/SavePlayer")]
        System.Threading.Tasks.Task SavePlayerAsync(CheckersCliente.MainService.Jugador player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/VerifyPlayer")]
        void VerifyPlayer(CheckersCliente.MainService.Jugador player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/VerifyPlayer")]
        System.Threading.Tasks.Task VerifyPlayerAsync(CheckersCliente.MainService.Jugador player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/SendMail")]
        void SendMail(CheckersCliente.MainService.Jugador player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/SendMail")]
        System.Threading.Tasks.Task SendMailAsync(CheckersCliente.MainService.Jugador player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/PasswordForgotMail")]
        void PasswordForgotMail(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/PasswordForgotMail")]
        System.Threading.Tasks.Task PasswordForgotMailAsync(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/VerifyPin")]
        void VerifyPin(string nickname, string pin, string answer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/VerifyPin")]
        System.Threading.Tasks.Task VerifyPinAsync(string nickname, string pin, string answer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/ChangePassword")]
        void ChangePassword(string nickname, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/ChangePassword")]
        System.Threading.Tasks.Task ChangePasswordAsync(string nickname, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/GetActualPlayer")]
        void GetActualPlayer(CheckersCliente.MainService.Jugador actualPlayer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/GetActualPlayer")]
        System.Threading.Tasks.Task GetActualPlayerAsync(CheckersCliente.MainService.Jugador actualPlayer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/GetLoginResult")]
        void GetLoginResult(CheckersCliente.MainService.LoginResult resultadoLogin, CheckersCliente.MainService.Jugador player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/GetSaveResult")]
        void GetSaveResult(CheckersCliente.MainService.SaveResult resultadoGuardado, CheckersCliente.MainService.Jugador player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/GetVerifyResult")]
        void GetVerifyResult(CheckersCliente.MainService.VerificationResult resultadoVerificacion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/GetResendMailResult")]
        void GetResendMailResult(CheckersCliente.MainService.MailResult resultadoCorreo, string actualNickname);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/GetMailResult")]
        void GetMailResult(CheckersCliente.MainService.MailResult resultadoCorreo, string actualNickname, string securityQuestion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/GetPinResult")]
        void GetPinResult(CheckersCliente.MainService.PinResult verifiedPinResult, string playerNickname);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/GetPasswordChangeResult")]
        void GetPasswordChangeResult(CheckersCliente.MainService.PasswordChangeResult passwordChangedResult);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayerManager/SendActualPlayer")]
        void SendActualPlayer(CheckersCliente.MainService.DataObtainedResult dataObtainedResult, CheckersCliente.MainService.Jugador actualPlayer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerManagerChannel : CheckersCliente.MainService.IPlayerManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerManagerClient : System.ServiceModel.DuplexClientBase<CheckersCliente.MainService.IPlayerManager>, CheckersCliente.MainService.IPlayerManager {
        
        public PlayerManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PlayerManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PlayerManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Login(CheckersCliente.MainService.Jugador player) {
            base.Channel.Login(player);
        }
        
        public System.Threading.Tasks.Task LoginAsync(CheckersCliente.MainService.Jugador player) {
            return base.Channel.LoginAsync(player);
        }
        
        public void SavePlayer(CheckersCliente.MainService.Jugador player) {
            base.Channel.SavePlayer(player);
        }
        
        public System.Threading.Tasks.Task SavePlayerAsync(CheckersCliente.MainService.Jugador player) {
            return base.Channel.SavePlayerAsync(player);
        }
        
        public void VerifyPlayer(CheckersCliente.MainService.Jugador player) {
            base.Channel.VerifyPlayer(player);
        }
        
        public System.Threading.Tasks.Task VerifyPlayerAsync(CheckersCliente.MainService.Jugador player) {
            return base.Channel.VerifyPlayerAsync(player);
        }
        
        public void SendMail(CheckersCliente.MainService.Jugador player) {
            base.Channel.SendMail(player);
        }
        
        public System.Threading.Tasks.Task SendMailAsync(CheckersCliente.MainService.Jugador player) {
            return base.Channel.SendMailAsync(player);
        }
        
        public void PasswordForgotMail(string nickname) {
            base.Channel.PasswordForgotMail(nickname);
        }
        
        public System.Threading.Tasks.Task PasswordForgotMailAsync(string nickname) {
            return base.Channel.PasswordForgotMailAsync(nickname);
        }
        
        public void VerifyPin(string nickname, string pin, string answer) {
            base.Channel.VerifyPin(nickname, pin, answer);
        }
        
        public System.Threading.Tasks.Task VerifyPinAsync(string nickname, string pin, string answer) {
            return base.Channel.VerifyPinAsync(nickname, pin, answer);
        }
        
        public void ChangePassword(string nickname, string newPassword) {
            base.Channel.ChangePassword(nickname, newPassword);
        }
        
        public System.Threading.Tasks.Task ChangePasswordAsync(string nickname, string newPassword) {
            return base.Channel.ChangePasswordAsync(nickname, newPassword);
        }
        
        public void GetActualPlayer(CheckersCliente.MainService.Jugador actualPlayer) {
            base.Channel.GetActualPlayer(actualPlayer);
        }
        
        public System.Threading.Tasks.Task GetActualPlayerAsync(CheckersCliente.MainService.Jugador actualPlayer) {
            return base.Channel.GetActualPlayerAsync(actualPlayer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MainService.IRankingManager", CallbackContract=typeof(CheckersCliente.MainService.IRankingManagerCallback))]
    public interface IRankingManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRankingManager/GetRankingData")]
        void GetRankingData();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRankingManager/GetRankingData")]
        System.Threading.Tasks.Task GetRankingDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRankingManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRankingManager/GetRankingResult")]
        void GetRankingResult(CheckersCliente.MainService.RankingResult resultado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRankingManager/ReceiveRankingData")]
        void ReceiveRankingData(CheckersCliente.MainService.Ranking[] rankingList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRankingManagerChannel : CheckersCliente.MainService.IRankingManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RankingManagerClient : System.ServiceModel.DuplexClientBase<CheckersCliente.MainService.IRankingManager>, CheckersCliente.MainService.IRankingManager {
        
        public RankingManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public RankingManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public RankingManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RankingManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RankingManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetRankingData() {
            base.Channel.GetRankingData();
        }
        
        public System.Threading.Tasks.Task GetRankingDataAsync() {
            return base.Channel.GetRankingDataAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MainService.IGameManager", CallbackContract=typeof(CheckersCliente.MainService.IGameManagerCallback))]
    public interface IGameManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/CreateMatch")]
        void CreateMatch(CheckersCliente.MainService.Jugador currentPlayer, CheckersCliente.MainService.CheckersGameMode gameMode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/CreateMatch")]
        System.Threading.Tasks.Task CreateMatchAsync(CheckersCliente.MainService.Jugador currentPlayer, CheckersCliente.MainService.CheckersGameMode gameMode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/Player1Turn")]
        void Player1Turn(CheckersCliente.MainService.Checker[][] updateBoardMatrix, int matchNumber, int playerTwoCheckers, int playerOneCheckers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/Player1Turn")]
        System.Threading.Tasks.Task Player1TurnAsync(CheckersCliente.MainService.Checker[][] updateBoardMatrix, int matchNumber, int playerTwoCheckers, int playerOneCheckers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/Player2Turn")]
        void Player2Turn(CheckersCliente.MainService.Checker[][] updateBoardMatrix, int matchNumber, int playerTwoCheckers, int playerOneCheckers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/Player2Turn")]
        System.Threading.Tasks.Task Player2TurnAsync(CheckersCliente.MainService.Checker[][] updateBoardMatrix, int matchNumber, int playerTwoCheckers, int playerOneCheckers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/FinishPlayerGame")]
        void FinishPlayerGame(int matchNumber, int playerNumber, int playerTwoCheckers, int playerOneCheckers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/FinishPlayerGame")]
        System.Threading.Tasks.Task FinishPlayerGameAsync(int matchNumber, int playerNumber, int playerTwoCheckers, int playerOneCheckers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/SendGameMessage")]
        void SendGameMessage(int playerNumber, string message, int matchNumber);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/SendGameMessage")]
        System.Threading.Tasks.Task SendGameMessageAsync(int playerNumber, string message, int matchNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/UpdateGameGUI")]
        void UpdateGameGUI(CheckersCliente.MainService.Checker[][] updateBoardMatrix, int playerTwoCheckers, int playerOneCheckers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/FinishGame")]
        void FinishGame(int playerTwoCheckers, int playerOneCheckers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/GetMatchmakingResult")]
        void GetMatchmakingResult(CheckersCliente.MainService.MatchmakingResult result, CheckersCliente.MainService.Match match, int playerNumber);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/UpdateMatchNumber")]
        void UpdateMatchNumber(int newMatchNumber);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/RecieveGameMessage")]
        void RecieveGameMessage(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameManagerChannel : CheckersCliente.MainService.IGameManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameManagerClient : System.ServiceModel.DuplexClientBase<CheckersCliente.MainService.IGameManager>, CheckersCliente.MainService.IGameManager {
        
        public GameManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void CreateMatch(CheckersCliente.MainService.Jugador currentPlayer, CheckersCliente.MainService.CheckersGameMode gameMode) {
            base.Channel.CreateMatch(currentPlayer, gameMode);
        }
        
        public System.Threading.Tasks.Task CreateMatchAsync(CheckersCliente.MainService.Jugador currentPlayer, CheckersCliente.MainService.CheckersGameMode gameMode) {
            return base.Channel.CreateMatchAsync(currentPlayer, gameMode);
        }
        
        public void Player1Turn(CheckersCliente.MainService.Checker[][] updateBoardMatrix, int matchNumber, int playerTwoCheckers, int playerOneCheckers) {
            base.Channel.Player1Turn(updateBoardMatrix, matchNumber, playerTwoCheckers, playerOneCheckers);
        }
        
        public System.Threading.Tasks.Task Player1TurnAsync(CheckersCliente.MainService.Checker[][] updateBoardMatrix, int matchNumber, int playerTwoCheckers, int playerOneCheckers) {
            return base.Channel.Player1TurnAsync(updateBoardMatrix, matchNumber, playerTwoCheckers, playerOneCheckers);
        }
        
        public void Player2Turn(CheckersCliente.MainService.Checker[][] updateBoardMatrix, int matchNumber, int playerTwoCheckers, int playerOneCheckers) {
            base.Channel.Player2Turn(updateBoardMatrix, matchNumber, playerTwoCheckers, playerOneCheckers);
        }
        
        public System.Threading.Tasks.Task Player2TurnAsync(CheckersCliente.MainService.Checker[][] updateBoardMatrix, int matchNumber, int playerTwoCheckers, int playerOneCheckers) {
            return base.Channel.Player2TurnAsync(updateBoardMatrix, matchNumber, playerTwoCheckers, playerOneCheckers);
        }
        
        public void FinishPlayerGame(int matchNumber, int playerNumber, int playerTwoCheckers, int playerOneCheckers) {
            base.Channel.FinishPlayerGame(matchNumber, playerNumber, playerTwoCheckers, playerOneCheckers);
        }
        
        public System.Threading.Tasks.Task FinishPlayerGameAsync(int matchNumber, int playerNumber, int playerTwoCheckers, int playerOneCheckers) {
            return base.Channel.FinishPlayerGameAsync(matchNumber, playerNumber, playerTwoCheckers, playerOneCheckers);
        }
        
        public void SendGameMessage(int playerNumber, string message, int matchNumber) {
            base.Channel.SendGameMessage(playerNumber, message, matchNumber);
        }
        
        public System.Threading.Tasks.Task SendGameMessageAsync(int playerNumber, string message, int matchNumber) {
            return base.Channel.SendGameMessageAsync(playerNumber, message, matchNumber);
        }
    }
}

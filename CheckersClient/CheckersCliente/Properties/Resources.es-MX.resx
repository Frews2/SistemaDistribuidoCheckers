<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnswerQuestion" xml:space="preserve">
    <value>Respuesta</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Cambio de contraseña</value>
  </data>
  <data name="ConfirmationQuestion" xml:space="preserve">
    <value>Pregunta de confirmación</value>
  </data>
  <data name="E-mail" xml:space="preserve">
    <value>Correo</value>
  </data>
  <data name="EnterMail" xml:space="preserve">
    <value>Introduce tu correo</value>
  </data>
  <data name="EnterNickname" xml:space="preserve">
    <value>Introduce tu apodo</value>
  </data>
  <data name="EnterPin" xml:space="preserve">
    <value>Introduce el pin</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>¿Olvido su contraseña?</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Lenguaje</value>
  </data>
  <data name="GamesLost" xml:space="preserve">
    <value>Partidas Perdidas</value>
  </data>
  <data name="GamesPlayed" xml:space="preserve">
    <value>Partidas Jugadas</value>
  </data>
  <data name="GamesWon" xml:space="preserve">
    <value>Partidas Ganadas</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Inicio</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="MinimunLength" xml:space="preserve">
    <value>Una o mas casillas no contienen los elementos minimos suficientes</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Mensaje</value>
  </data>
  <data name="Nickname" xml:space="preserve">
    <value>Apodo</value>
  </data>
  <data name="NicknameInstructions" xml:space="preserve">
    <value>Ingrese su apodo para recibir un pin de confirmación en su correo vinculado y cambiar su contraseña</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Contraseña</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>Jugar</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Posición</value>
  </data>
  <data name="Ranking" xml:space="preserve">
    <value>Clasificacion</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Registrar nueva cuenta</value>
  </data>
  <data name="ResendE-mail" xml:space="preserve">
    <value>Reenviar correo</value>
  </data>
  <data name="Rules" xml:space="preserve">
    <value>Reglas</value>
  </data>
  <data name="SendMail" xml:space="preserve">
    <value>Enviar correo</value>
  </data>
  <data name="Rankings" xml:space="preserve">
    <value>Puntuaciones</value>
  </data>
  <data name="RegistrationDate" xml:space="preserve">
    <value>Fecha de Registración</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Regresar</value>
  </data>
  <data name="Rule" xml:space="preserve">
    <value>Reglas</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Enviar</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>Usuario</value>
  </data>
  <data name="VerifyAccount" xml:space="preserve">
    <value>Verificar cuenta</value>
  </data>
  <data name="VerifyPassword" xml:space="preserve">
    <value>Confirmar contraseña</value>
  </data>
  <data name="WaitMessage" xml:space="preserve">
    <value>Espere hasta que termine el temporizador para reenviar el correo</value>
  </data>
  <data name="GameRules" xml:space="preserve">
    <value>Checkers es un juego de dos jugadores.
Cada jugador recibe 12 discos de colores al comienzo del juego, con negro y rojo como colores.

El tablero consta de 64 casillas, 32 oscuras y 32 claras.
Cada una de las piezas se coloca en los 12 cuadrados oscuros más cercanos al jugador.

El jugador negro siempre se mueve primero, luego cada jugador se turna.

Los únicos movimientos permitidos es que las piezas siempre se mueven en diagonal.
Las piezas individuales solo pueden avanzar hacia su oponente.

Cualquier jugador que haga un movimiento de no captura solo puede moverse un cuadrado a la vez.

Un movimiento de captura o salto implica saltar sobre una de las piezas del oponente en línea diagonal.
En un solo salto, solo se puede capturar una pieza aunque múltiples saltos
o las capturas se pueden realizar en un turno.

Todas las piezas capturadas se eliminan del tablero.

Siempre que la opción de captura esté disponible, el jugador debe dar el salto.
En los casos en que sea posible más de una captura, el jugador puede elegir qué salto realizar.

Cuando la pieza de un jugador logra llegar a la primera fila del oponente, es coronado "rey". 
Los reyes se distinguen de las otras piezas por tener un símbolo de corona en la parte superior.

Si bien los reyes solo pueden moverse en diagonal, pueden moverse hacia adelante y hacia atrás.

Los reyes pueden saltar en varias direcciones en el mismo turno.

El juego termina cuando un jugador ya no le quedan fichas.
Esto puede ser el resultado de que todas las piezas de un jugador sean capturadas.</value>
  </data>
  <data name="PlayerData" xml:space="preserve">
    <value>Datos del jugador</value>
  </data>
  <data name="CanadianCheckers" xml:space="preserve">
    <value>Checkers Canadienses</value>
  </data>
  <data name="ClassicCheckers" xml:space="preserve">
    <value>Checkers Clásicos</value>
  </data>
  <data name="GameMode" xml:space="preserve">
    <value>Modo de Juego</value>
  </data>
  <data name="ItalianCheckers" xml:space="preserve">
    <value>Checkers Italianos</value>
  </data>
  <data name="SuicideCheckers" xml:space="preserve">
    <value>Checkers Suicidas</value>
  </data>
  <data name="MatchmakingStandBy" xml:space="preserve">
    <value>Espere hasta que se encuentre una partida para usted</value>
  </data>
  <data name="Game" xml:space="preserve">
    <value>Juego</value>
  </data>
  <data name="Players" xml:space="preserve">
    <value>Jugadores</value>
  </data>
  <data name="Accuser" xml:space="preserve">
    <value>Acusador</value>
  </data>
  <data name="ReportAdministration" xml:space="preserve">
    <value>Gestión de Reportes de Jugadores</value>
  </data>
  <data name="ReportDescription" xml:space="preserve">
    <value>Descripción de Acuso</value>
  </data>
  <data name="Reported" xml:space="preserve">
    <value>Reportado</value>
  </data>
  <data name="ReportID" xml:space="preserve">
    <value>ID Reporte</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Salir</value>
  </data>
  <data name="ViewReports" xml:space="preserve">
    <value>Ver Reportes</value>
  </data>
  <data name="Ban" xml:space="preserve">
    <value>Suspendir</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Opciones</value>
  </data>
  <data name="BannedLoginMessage" xml:space="preserve">
    <value>Usted a sido baneado. No tiene acceso al sistemo.</value>
  </data>
  <data name="DoesNotExistLoginMessage" xml:space="preserve">
    <value>No existe jugador</value>
  </data>
  <data name="DuplicateEmailMessage" xml:space="preserve">
    <value>Ese correo ya esta registrado favor de utilizar otro</value>
  </data>
  <data name="DuplicateNicknameMessage" xml:space="preserve">
    <value>El nickname ya existe, favor de utilizar otro</value>
  </data>
  <data name="EmailNotSentMessage" xml:space="preserve">
    <value>Se ha tenido un error a la hora de enviar el correo, intente mas tarde</value>
  </data>
  <data name="EmailSentMessage" xml:space="preserve">
    <value>Se ha enviado el correo exitosamente</value>
  </data>
  <data name="IncorrectPasswordMessage" xml:space="preserve">
    <value>Verifica tu contraseña ingresado</value>
  </data>
  <data name="LoadMessage" xml:space="preserve">
    <value>Espere mientras se consulta</value>
  </data>
  <data name="NoConnectionMessage" xml:space="preserve">
    <value>No se pudo conectarse a la base de datos</value>
  </data>
  <data name="NoInfoMessage" xml:space="preserve">
    <value>No se encuentra informacion</value>
  </data>
  <data name="NoMatchFoundErrorMessage" xml:space="preserve">
    <value>Error. No se logro buscar partida. Intente de nuevo</value>
  </data>
  <data name="NotVerifiedMessage" xml:space="preserve">
    <value>No ha verificado su cuenta, porfavor verificarla</value>
  </data>
  <data name="PasswordChangeErrorMessage" xml:space="preserve">
    <value>Ha ocurrido un error a la hora de cambiar contraseña intentar de nuevo porfavor</value>
  </data>
  <data name="PlayerAlreadyBannedErrorMessage" xml:space="preserve">
    <value>ERROR: El Jugador ya se encuentra en estado de baja.</value>
  </data>
  <data name="PlayerBannedMessage" xml:space="preserve">
    <value>Se ha dado de baja al jugador.</value>
  </data>
  <data name="SuccessfulPasswordChangeMessage" xml:space="preserve">
    <value>Se ha cambiado la contraseña correctamente</value>
  </data>
  <data name="SuccessfulRegisterMessage" xml:space="preserve">
    <value>Se ha registrado exitosamente, favor de confirmar correo</value>
  </data>
  <data name="SuccessfulVerificationMessage" xml:space="preserve">
    <value>Se ha verificado correctamente tu cuenta</value>
  </data>
  <data name="UnableToBanErrorMessage" xml:space="preserve">
    <value>ERROR: No se logro dar de baja al jugador reportado.</value>
  </data>
  <data name="UnexplainedErrorMessage" xml:space="preserve">
    <value>A ocurrido un error inesperado, vuelva a intentar</value>
  </data>
  <data name="WrongAnswerMessage" xml:space="preserve">
    <value>Respuesta incorrecta. Intente de nuevo.</value>
  </data>
  <data name="WrongPINMessage" xml:space="preserve">
    <value>Verifica tu pin</value>
  </data>
  <data name="ExplainReport" xml:space="preserve">
    <value>Explique las razones del reporte</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Reportar</value>
  </data>
  <data name="Pass" xml:space="preserve">
    <value>Pasar turno</value>
  </data>
  <data name="CancelQuestion" xml:space="preserve">
    <value>¿Seguro que desea cancelar?</value>
  </data>
  <data name="LoggedPlayer" xml:space="preserve">
    <value>Ya ha iniciado sesión</value>
  </data>
  <data name="LogOutQuestion" xml:space="preserve">
    <value>¿Esta seguro de cerrar sesion?</value>
  </data>
  <data name="PasswordErrorText" xml:space="preserve">
    <value>Las contraseñas no coinciden o no tienen la longitud mínima (8 caracteres).</value>
  </data>
  <data name="Player1" xml:space="preserve">
    <value>Jugador 1:</value>
  </data>
  <data name="Player2" xml:space="preserve">
    <value>Jugador 2:</value>
  </data>
  <data name="ReportSuccess" xml:space="preserve">
    <value>Jugador reportado exitosamente</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmación</value>
  </data>
  <data name="EmptyFieldsError" xml:space="preserve">
    <value>Uno o varios campos están vacíos. Por favor ingresa los datos necesarios.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Exito</value>
  </data>
  <data name="WrongFieldsError" xml:space="preserve">
    <value>La información de uno o más campos es incorrecta o está vacía. Verifique la información.</value>
  </data>
  <data name="playerDisconnected" xml:space="preserve">
    <value>Juego terminado debido a que el otro jugador se ha desconectado</value>
  </data>
</root>